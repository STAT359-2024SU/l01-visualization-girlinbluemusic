---
title: "L01 Visualization"
subtitle: "Foundations of Data Science with R (STAT 359)"
author: "Amy King"
format:
  html:
    toc: true
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false

from: markdown+emoji 
---

::: {.callout-tip icon="false"}
## Github Repo Link

<https://github.com/STAT359-2024SU/l01-visualization-girlinbluemusic.git>
:::

::: callout-warning
Make sure your solutions are clearly indicated and that your document is neatly formatted.
:::

## Overview

The goal of this lab is to start building the skills to explore data through visualization using the `ggplot2` package in R (member of the `tidyverse`). Students will also learn to access and utilize R documentation.

## Load packages

You should always begin by loading all necessary packages towards the beginning of your document.

```{r}
#| label: load-pkgs

# Loading package(s)
library(tidyverse)
```

## Datasets

This lab utilizes the `mpg` and `diamonds` datasets. Both come with `ggplot2` and their documentation/codebooks can be accessed with `?mpg` and `?diamonds`, provided you have installed and loaded `ggplot2` to your current R session. The case study utilizes `tinder_data.csv` located in your `data` folder. The following line of code reads in the data.

```{r}
#| label: load-data

# read in data
tinder_data <- read_csv("data/tinder_data.csv")
```

## Exercises

### Exercise 1

There are 3 particularly important components to our template for building a graphic with `ggplot2`. They are `<DATA>`, `<GEOM_FUNCTION>`, and `<MAPPINGS>`. The importance of `<DATA>` is obvious. `<GEOM_FUNCTION>` is referring to the selection of a **geom**. `<MAPPINGS>`, specifically `aes(<MAPPINGS>)`, is referring to the process of defining **aesthetic mappings**.

-   What is a **geom**?
-   What is an **aesthetic mapping**?

::: {.callout-tip icon="false"}
## Solution

A **geom** is a geometric layer that is connected to one or more variables. They're essentially what goes onto the blank canvas that we look at to interpret data. They come in a variety of forms, like geom_point, which creates a scatterplot, geom_bar to create bar charts, geom_boxplot to create box-and-whisker plots, geom_smooth to represent a line of best fit, and many other types of layers that can be used to visually represent data.

An **aesthetic mapping**, or aes, is a function that defines how variables are mapped to visual properties. At the very least, an aes must have or inherit a specification of which variables map to the x and y axes of the plot.
:::

### Exercise 2

Construct a scatterplot of `hwy` versus `cty` using the `mpg` dataset. What is the problem with this plot? How could you improve it?

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  mpg, aes(x = cty, y = hwy)
) +
  geom_point()
```

The main problem with this plot is that the above does not look like it contains all \~1200 observations, and because there weren't any warnings about data being dropped, a good guess is that a lot of the observations are identical and thus on top of each other. To check this (and make all the observations more visible), we can slightly offset the points (aka jitter them). The default values for it seemed to work all right for this:

```{r}
ggplot(
  mpg, aes(x = cty, y = hwy)
) +
  geom_jitter(alpha = 0.5)
```
:::

### Exercise 3

Construct a scatterplot of `hwy` versus `cty`. Set the color of the points to `drv`.

Now construct a scatterplot of `hwy` versus `cty`. Set the color of the points to your favorite color (try typing `colors()` in the console) and `facet` by `drv`. Read `?facet_wrap` and adjust the `ncol` and `scales` as necessary.

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point(aes(color = drv))
```

Facet in medium turquoise:

```{r}
ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point(color = "mediumturquoise") +
  facet_wrap(~drv)
```
:::

What are the advantages to using faceting instead of the color aesthetic? What are the disadvantages? How might the balance change if you had a larger dataset?

::: {.callout-tip icon="false"}
## Solution

Sometimes it's easier to see the difference in distribution between 3 categories if they're on separate plots. If there are too many points, for instance, it might be hard to see the category clusters compared with each other. When they're on separate plots, the empty space helps visually with that comparison. The disadvantage is that it's harder to compare close values this way, so for smaller datasets you both don't necessarily need to do this and may lose out on precise differences that may make bigger impacts (related to effect size). For a larger dataset, it would probably be much easier to see patterns with faceted plots because you'd end up with a lot of points on top of each other, and jittering all the points may not be possible or helpful because of how dense the plot is.
:::

### Exercise 4

Construct a scatterplot of `hwy` vs `cty`. Next, map a third numerical variable to `color`, then `size`, then `shape`.

::: {.callout-tip icon="false"}
## Solution

Here is cyl mapped to color and size:

```{r}
ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point(aes(color = cyl, size = cyl)) +
  labs(color = "cyl", size = "cyl")
```

Because all the numerical values in the dataset are integers (and thus treated as continuous by R), it throws an error when mapping any to size. But here's what it would be (eval false, so it can render!):

```{r}
#| eval: false
ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point(aes(shape = cyl))
```
:::

How do the aesthetics behave differently for categorical versus numerical variables? In other words, which variable types (numeric/categorical) are appropriate to match to which aesthetics (size/shape/color)?

::: {.callout-tip icon="false"}
## Solution

Size can be mapped to numeric or categorical variables.

Shape can only be mapped to categorical variables (like the 3 penguin species from the palmerpenguins set). This makes sense because generally it's difficult to communicate any sort of spectrum or scale for shape, but we can show a continuous scale/spectrum using size or color/shade.

Color can be mapped to numeric or categorical variables.
:::

### Exercise 5

Construct a histogram of the `carat` variable in the `diamonds` dataset. Adjust the `bins` to an appropriate value. Add a `title`, remove the axis label that says `count`, and add a `caption`: "Source: ggplot2 package".

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(diamonds, aes(x = carat)) +
  geom_histogram(binwidth = .05) +
  labs(title = "Diamond Carats", caption = "Source: ggplot2 package") +
  ylab(NULL)
```
:::

### Exercise 6

Construct 2 appropriate graphics to show the relationship between `carat` and `cut`.

::: {.callout-tip icon="false"}
## Solution

Box plot:

```{r}
ggplot(diamonds, aes(x = cut, y = carat)) +
  geom_boxplot()
```

Density plot:

```{r}
ggplot(diamonds, aes(x = carat, color = cut, fill = cut)) +
  geom_density(linewidth = 0.75, alpha = 0.15)
```
:::

### Exercise 7

Construct a barplot of `cut`. Add in `aes(fill = carat > 0.7)`.

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(diamonds, aes(x = cut, fill = carat > 0.7)) +
  geom_bar()
```
:::

### Exercise 8

When would you use `facet_grid()` versus `facet_wrap()`? When using `facet_grid()` it is suggested that you put the variable with more unique levels in the columns. Why do you think that this practice is suggested?

::: {.callout-tip icon="false"}
## Solution

This wasn't part of the reading (only facet_wrap) because facet_grid is in the ggplot2 book (ch. 16), but from a look into that chapter, it seems like facet_grid is to look more the relationship between 2 variables versus 1 with facet_wrap. I think with facet_wrap, to go back to the penguins dataset, we faceted to compare species, which is 1 variable, but if we had two or more variables to compare across these spaces, then facet_grid would be more helpful. The book oddly didn't put any data on the plots for these! The variable with more unique levels would make more sense to put in columns because it spreads the values across the columns, and the vertical scales are aligned, so you have an easy visual comparison across the y axis.
:::

## Case Study

Congratulations, you just landed your first job as a data analyst for Tinder! The dataset is stored in the `data` folder called `tinder_data`. A codebook, `tinder_data_codebook.csv`, provides a description of each of the variable names. This has been read in for you at the top of the document. We will learn more about importing data later in the quarter.

**Your first assignment is to determine if there is a relationship between messages sent and messages received and how this differs based on user gender.** Your boss has asked for a one paragraph summary with graphics to support your conclusions. Your boss wants all graphics *saved* into a folder named "plots". Hint: `ggsave()`.

Since this is your first project as a data analyst you have been provided some tips and considerations for getting started:

-   When approaching a research question it is important to use univariate, bivariate, and multivariate analysis (depending on the problem) to get a better understanding of your data and also identify any potential problems.
-   How might the distribution of your variables impact your conclusions? Outliers? Weird values? Imbalanced classes?
-   How might `coord_fixed()` and `geom_abline()` improve a graphic?
-   Feel free to be creative! It is your job to answer this question and interpret conclusions in the most appropriate ways you see fit.

This dataset was provided by [Swipestats.io](https://www.swipestats.io/).

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE
:::

## Graduate Challenge

::: callout-important
Graduate students are required to complete this challenge. **It is optional for undergraduate students.**
:::

Recreate the following graphic:

-   alpha = 0.25
-   theme is with Google Docs Chart from [ggthemes package](https://jrnold.github.io/ggthemes/reference/index.html).

Why might your graph not match the example exactly? What could we do to ensure our graphs were identical?

::: {.callout-tip icon="false"}
## Solution

There does not seem to be a graphic here to recreate. But the themes look cool!
:::
